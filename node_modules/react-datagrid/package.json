{
  "name": "react-datagrid",
  "version": "1.1.6",
  "description": "React DataGrid",
  "main": "lib/index.js",
  "scripts": {
    "test": "mocha --recursive --reporter spec --require should",
    "test-w": "mocha --recursive --reporter spec --require should --watch",
    "lib": "gulp",
    "build-style": "webpack --progress --colors --config build-style.config.js",
    "build-style-dist": "webpack --progress --colors --config build-style-dist.config.js",
    "build-style-dist-min": "webpack --progress --colors --config build-style-dist-min.config.js",
    "stats": "webpack --profile --progress --colors --config dist.config.js --json > stats.json",
    "dist": "webpack --progress --colors --config dist.config.js",
    "watch-dist": "webpack --watch --progress --colors --config dist.config.js",
    "dist.min": "webpack --progress --colors --optimize-minimize --optimize-occurence-order --optimize-dedupe --config dist.min.config.js",
    "build": "npm run lib && npm run dist && npm run dist.min && npm run build-style && npm run build-style-dist && npm run build-style-dist-min",
    "serve": "http-server -p 9091",
    "dev": "webpack-dev-server --progress --colors --port 9090"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/zippyui/react-datagrid.git"
  },
  "keywords": [
    "grid",
    "datagrid",
    "data-grid",
    "grid",
    "widget",
    "table",
    "list",
    "react-component",
    "react",
    "grid"
  ],
  "devDependencies": {
    "babel-core": "^5.1.13",
    "babel-loader": "^5.0.0",
    "css-loader": "^0.9.0",
    "exports-loader": "^0.6.2",
    "extract-text-webpack-plugin": "^0.3.8",
    "faker": "^2.1.2",
    "file-loader": "^0.8.1",
    "guid": "0.0.12",
    "gulp": "^3.8.11",
    "gulp-react": "^3.0.0",
    "jsdom": "5.1.0",
    "mocha": "^2.2.1",
    "raw-loader": "^0.5.1",
    "react-hot-loader": "^1.2.4",
    "should": "^6.0.1",
    "sorty": "^1.2.0",
    "style-loader": "^0.8.2",
    "stylus-loader": "^0.4.0",
    "webpack": "^1.8.4",
    "webpack-dev-middleware": "^1.0.11",
    "webpack-dev-server": "1.6.6"
  },
  "dependencies": {
    "clone": "^0.1.18",
    "css-utils": "^0.4.2",
    "drag-helper": "^1.2.3",
    "es6-promise": "^2.1.1",
    "hasown": "^1.0.1",
    "normalize.css": "^3.0.3",
    "object-assign": "^2.0.0",
    "react-event-names": "^1.0.0",
    "react-load-mask": "^1.0.1",
    "react-menus": "^1.1.1",
    "react-simple-toolbar": "^1.0.5",
    "react-style-normalizer": "^1.2.0",
    "react-virtual-scroller": "^1.0.2",
    "region": "^2.1.2",
    "region-align": "^2.1.2",
    "ustring": "^1.4.1",
    "whatwg-fetch": "^0.7.0"
  },
  "peerDependencies": {
    "react": ">=0.13.0"
  },
  "author": {
    "name": "ZippyUI",
    "email": "contact@zippyui.com"
  },
  "contributors": [],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/zippyui/react-datagrid/issues"
  },
  "homepage": "https://github.com/zippyui/react-datagrid",
  "readme": "react-datagrid\n=================\n\n> A carefully crafted DataGrid for React\n\nSee demo at [zippyui.github.io/react-datagrid](http://zippyui.github.io/react-datagrid)\n\n<a href=\"http://zippyui.github.io/react-datagrid/#/examples/basic\"><img src=\"./react-datagrid.png\" height=\"400\" width=\"739\" /></a>\n\n## Install\n\n```sh\n$ npm install react-datagrid --save\n```\n\n## Changelog\n\nSee [changelog](./CHANGELOG.md)\n\n## Roadmap\n\nSee [roadmap](./ROADMAP.md)\n\n## Features\n\n * renders huge amounts of data\n * resizable columns\n * reorderable columns\n * remote data support\n * custom row/cell/column rendering\n * multiple/single selection\n * sorting\n * filtering\n * pagination\n * hideable columns\n * works on mobile\n\n## Usage\n\nPlease include the stylesheet `index.css` in your project. If you are using `webpack` with `css-loader`, you can require it: `require('react-datagrid/index.css')`\n\n#### NOTE:\nFor optimal performance, make sure you use `react-datagrid` with the **production version of React**, not the `dev` version. The `dev` version contains a lot of checks, which slow down grid scrolling/rendering quite a bit.\n\nOf course for development, you can use React `dev` version, but this is just a warning so you won't be put off if you see some jank in `dev` mode. It will dissapear when you switch to `production` (minified) version. We are working on this, to make the datagrid usage experience as optimal as possible even in development.\n\n#### Example\n```jsx\n\nvar React = require('react')\nvar DataGrid = require('react-datagrid')\n\nvar data = [\n\t{ id: '1', firstName: 'John', lastName: 'Bobson'},\n\t{ id: '2', firstName: 'Bob', lastName: 'Mclaren'}\n]\nvar columns = [\n\t{ name: 'firstName'},\n\t{ name: 'lastName'}\n]\n\n<DataGrid idProperty=\"id\" dataSource={data} columns={columns} />\n\n```\n\nFor more examples, see [examples site](http://zippyui.github.io/react-datagrid/#/examples/basic)\n\n## Props\n\nThere are a lot of props that can be configured for the datagrid. We'll try to categorize them so they are easy to follow\n\n#### Basic\n\n * `dataSource`: Array/String/Function/Promise - for local data, an array of object to render in the grid. For remote data, a string url, or a function that returns a promise.\n * `idProperty`: String - the name of the property where the id is found for each object in the data array\n * `columns`: Array - an array of columns that are going to be rendered in the grid\n\n \tEach column should have a `name` property, and optionally a `title` property. If no `title` property is specified, a humanized version of the column `name` will be used.\n\n \t* `name`: String\n \t* `title`: String - a title to show in the header. If not specified, a humanized version of `name` will be used\n \t* `render`: Function - if you want custom rendering, specify this property\n\n \t\t```jsx\n \t\tvar columns = [\n \t\t\t{ name: 'index', render: function(v){return 'Index ' + v} }\n \t\t]\n \t\t```\n\n\t* `style`: Object - if you want cells in this column to be have a custom style\n\t* `textAlign`: String - one of 'left', 'right', 'center'\n\n#### Sorting\n\nSorting the data array is not done by the grid. You can however pass in sort info so the grid renders with sorting icons as needed\n\n * onSortChange: Function(sortInfo)\n * sortInfo: Array - an array with sorting information\n\n \tExample\n \t```jsx\n \tvar sortInfo = [{name: 'firstName', dir: 'asc'}]\n \tvar sorty = require('sorty')\n \t//sorty is a package which sorts an array on multiple properties\n\n \tfunction sort(arr){\n\t\treturn sorty(sortInfo, arr)\n \t}\n\n\tfunction onSortChange(info){\n\t\tsortInfo = info\n\t\tdata = sort(data)\n\t\t//now refresh the grid\n\t}\n\n\tvar data = [...]\n\n\tdata = sort(data)\n \t<DataGrid\n \t\tsortInfo={sortInfo}\n \t\tonSortChange={onSortChange}\n \t\tdataSource={data} idProperty='id' columns={columns} />\n \t```\n\n#### Column reordering\n\n If you want to enable column reordering, just specify\n\n * onColumnOrderChange: Function(index, dropIndex)\n\n \tExample\n \t```jsx\n \tfunction handleColumnOrderChange(index, dropIndex){\n \t\tvar col = columns[index]\n \t\tcolumns.splice(index, 1) //delete from index, 1 item\n \t\tcolumns.splice(dropIndex, 0, col)\n \t\tthis.setState({})\n \t}\n\n \t<DataGrid onColumnOrderChange={handleColumnOrderChange} />\n \t```\n\n#### Remote data\n\n * dataSource: String/Function/Promise if you specify a url to load remote data from, by default, pagination props are appended to the url as query params (pageSize, skip).\n\nFor an example, see [examples/restore-grid-state](http://zippyui.github.io/react-datagrid#/examples/restore-grid-state)\n\n#### Pagination\n\n When you have remote data, pagination is setup by default. If you want to disable pagination, specify the `pagination` prop with a `false` value.\n\n * pagination: Boolean\n * defaultPageSize: Number\n * pageSize: Number - controlled alternative for `defaultPageSize`. When `pageSize` changes, `onPageSizeChange(pageSize)` is called\n * defaultPage: Number\n * page: Number - controlled alternative for `defaultPage`. When `page` changes, `onPageChange(page)` is called\n\n\n\n## Contributing\n\nUse [Github issues](https://github.com/zippyui/react-datagrid/issues) for feature requests and bug reports.\n\nWe actively welcome pull requests.\n\nFor setting up & starting the project locally, use:\n\n```sh\n$ git clone https://github.com/zippyui/react-datagrid\n$ cd react-datagrid\n$ npm install\n$ npm dev\n```\n\nNow navigate to [localhost:9090](http://localhost:9090/)\n\nBefore building a new version, make sure you run\n\n```sh\n$ npm run build\n```\nwhich compiles the `src` folder (which contains jsx files) into the `lib` folder (only valid EcmaScript 5 files).\n\n## License\n\n#### MIT",
  "readmeFilename": "README.md",
  "gitHead": "f95aeab18337ede4ab5f4f62f692e7a8e366c5d9",
  "_id": "react-datagrid@1.1.6",
  "_shasum": "71cae62c92e6ad1ac7403691664ad606156302f3",
  "_from": "react-datagrid@latest"
}
